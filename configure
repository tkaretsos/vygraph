#!/usr/bin/sh

build_tool="make"

call_dir=`pwd`

if [ $# -eq 0 ]; then
  echo -e "Provide the LLVM source directory as first argument and"
  echo -e "LLVM build directory as second. If they are the same give"
  echo -e "only one argument."
  exit 1
fi

if [ $# -eq 1 ]; then
  if [ ! -e "$1"/README.txt ]; then
    echo -e "Directory $1 is not a valid LLVM source directory."
    exit 1
  fi

  absolute="$(cd "$1" && pwd)"
  llvm_src_dir=${absolute}
  llvm_obj_dir=${absolute}
fi

if [ $# -eq 2 ]; then
  if [ ! -e "$1"/README.txt ]; then
    echo -e "Directory $1 is not a valid LLVM source directory."
    exit 1
  fi
  if [ ! -d "$2" ]; then
    echo -e "Directory $2 does not exist."
    exit 1
  fi

  llvm_src_dir="$(cd "$1" && pwd)"
  llvm_obj_dir="$(cd "$2" && pwd)"
fi

# Find the absolute path of the project
proj_root_dir="$(cd "$(dirname "$0")" && pwd)"

echo -e "
add_subdirectory(${proj_root_dir} ${proj_root_dir})
" >> ${llvm_src_dir}/tools/clang/tools/extra/CMakeLists.txt

if [ -h ${proj_root_dir}/vygraph ]; then
  echo -e "Cannot create link ${proj_root_dir}/vygraph. File already exists."
else
  cd ${proj_root_dir}
  ln -s ${llvm_obj_dir}/bin/vygraph vygraph
fi

if [ -e ${proj_root_dir}/build ]; then
  echo -e "Cannot create convenience script ${proj_root_dir}/build. File already exists."
else
  cd ${proj_root_dir}
  echo -e "#!/usr/bin/sh\n" > build
  echo -e "# Go to the directory that LLVM build lives and run ninja" >> build
  echo -e "cd ${llvm_obj_dir}" >> build
  echo -e "${build_tool} vygraph" >> build
  echo -e "cd ${proj_root_dir}" >> build
  chmod a+x build
fi

cd ${call_dir}
