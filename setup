#!/usr/bin/sh

build_tool="make"

call_dir=`pwd`

if [ $# -ne 3 ]; then
  echo -e "Wrong number of arguments. Usage:"
  echo -e "1) ./$(basename "$0") <llvm_src_dir> <llvm_obj_dir> <llvm_bin_dir>"
  echo -e "   <llvm_src_dir>: The root directory of LLVM source code."
  echo -e "   <llvm_obj_dir>: The directory that LLVM is built."
  echo -e "                   Could be the same as <llvm_src_dir>."
  echo -e "   <llvm_bin_dir>: The directory that LLVM is installed.\n"
  echo -e "2) ./$(basename "$0") \$(cat llvm_dirs)"
  echo -e "   The \"llvm_dirs\" file is generated by the \"download_llvm\" script."
  exit 1
fi

if [ -e "$1"/README.txt ]; then
  llvm_src_dir="$(cd "$1" && pwd)"
else
  echo -e "Directory $1 is not a valid LLVM source directory."
  exit 1
fi

if [ -e "$2"/bin/opt ]; then
  llvm_obj_dir="$(cd "$2" && pwd)"
  llvm_bin_dir="$(cd "$3" && pwd)"
else
  echo -e "Directory $2 is not a valid LLVM build directory."
  exit 1
fi

# Find the absolute path of the project
proj_root_dir="$(cd "$(dirname "$0")" && pwd)"

# Include the projects directory in the right CMakeFiles.txt file
# under clang's project tree, in order to be able to build it.
makelist="${llvm_src_dir}/tools/clang/tools/extra/CMakeLists.txt"
if ! grep -q ${proj_root_dir} ${makelist}; then
  echo -e "\nadd_subdirectory(${proj_root_dir} ${proj_root_dir})\n" >> ${makelist}
fi

# Create a symlink to the executable for convenience.
if [ -h ${proj_root_dir}/vygraph ]; then
  echo -e "Cannot create link ${proj_root_dir}/vygraph. File already exists."
else
  cd ${proj_root_dir}
  ln -s ${llvm_obj_dir}/bin/vygraph vygraph
fi

# Generate build script
if [ -e ${proj_root_dir}/build ]; then
  echo -e "Cannot create convenience script ${proj_root_dir}/build. File already exists."
else
  cd ${proj_root_dir}
  echo -e "#!/usr/bin/sh\n" > build
  echo -e "#\n# Execute this script to build the project.\n#\n" >> build
  echo -e "# Go to the directory that LLVM build lives and run ${build_tool}" >> build
  echo -e "cd ${llvm_obj_dir}" >> build
  echo -e "${build_tool} vygraph" >> build
  echo -e "cd ${proj_root_dir}\n" >> build
  chmod a+x build
fi

# Generate configure script
if [ -e ${proj_root_dir}/configure ]; then
  echo -e "Cannot create convenience script ${proj_root_dir}/configure. File already exists."
else
  cd ${proj_root_dir}
  echo -e "#!/usr/bin/sh\n" > configure
  echo -e "#\n# Execute this script when you edit the cmake files.\n#\n" >> configure
  echo -e "# Go to the build directory of LLVM and run cmake" >> configure
  echo -e "cd ${llvm_obj_dir}" >> configure
  if [ $build_tool = "ninja" ]; then
    echo -e "cmake -G Ninja ${llvm_src_dir} -DCMAKE_INSTALL_PREFIX=${llvm_bin_dir} -DLLVM_TARGETS_TO_BUILD=host" >> configure
  else
    echo -e "cmake ${llvm_src_dir} -DCMAKE_INSTALL_PREFIX=${llvm_bin_dir} -DLLVM_TARGETS_TO_BUILD=host" >> configure
  fi
  echo -e "${build_tool}\n" >> configure
  chmod a+x configure
fi

cd ${call_dir}
