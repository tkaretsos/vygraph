bool read := *;
bool barrierOpen := false;
int waiting := 0;
int capacity := 0;
bool enough := false;

thread {
  ent -> pc1: read := true;
  pc1 -> pc2: read := false;
  pc2 -> pc3: waiting := waiting + 1;
  atomic {
    pc3 -> pc4: assume(enough);
    pc4 -> pc5: assume(waiting = capacity);
    pc5 -> pc6: barrierOpen := true;
    pc6 -> pc7: waiting := waiting - 1;
  }
  atomic {
    pc7 -> pc8: assume(barrierOpen);
    pc8 -> pc9: waiting := waiting - 1;
  }
  pc9 -> ext: assume(read);
}

main {
  atomic {
    ent -> pc1: assume(!enough);
    pc1 -> pc2: fork(thread);
    pc2 -> pc3: capacity := capacity + 1;
  }
  pc3 -> pc4: enough := false;
  pc4 -> ext: enough := true;
}
